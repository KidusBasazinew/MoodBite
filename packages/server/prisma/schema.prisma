// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  username      String    @unique
  emailAddress  String    @unique
  preferences   String[]  // vegan, vegetarian, keto
  allergies     String[]  // peanuts, gluten, dairy
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  meals         Meal[]
  logs          Log[]
}


model Mood {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String   @unique
  description     String?
  relatedNutrients String[]
  recommendedFoods String[]
  createdAt       DateTime @default(now())
}


model Meal {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  mood        String
  imageUrls   String[]
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  nutrition   Nutrition[]
  ingredients  String[]
  recipe      String[]
}

model Nutrition {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  meal      Meal    @relation(fields: [mealId], references: [id])
  mealId    String  @db.ObjectId
  name      String
  amount    Float
  unit      String
  calories  Float
  protein   Float
  carbs     Float
  fat       Float
  sugar     Float
  fiber     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Log {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @db.ObjectId
  mood            String
  recommendedFood String[]
  userFeedback    String?   // liked / disliked / neutral
  createdAt       DateTime @default(now())
}
